<div class="custom-selector" data-selector>
  <div class="custom-selector__header" data-selector-trigger>
    <span class="custom-selector__selected" data-selector-value>
      {{ selected_text | default: placeholder }}
    </span>
    <span class="custom-selector__arrow">▼</span>
  </div>

  <div class="custom-selector__dropdown" data-selector-dropdown>
    {% if options.size > 0 %}
      {% for option in options %}
        <div
          class="custom-selector__option {% if option.value == value %}custom-selector__option--selected{% endif %}"
          data-value="{{ option.value }}"
          data-label="{{ option.label }}"
        >
          {{ option.label }}
        </div>
      {% endfor %}
    {% endif %}
  </div>
</div>

<style>
  .custom-selector {
    position: relative;
    width: 100%;
    max-width: 300px;
    user-select: none;
  }

  .custom-selector__header {
    padding: 10px 15px;
    border: 1px solid #ddd;
    border-radius: 4px;
    background: #fff;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .custom-selector__dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-top: 4px;
    max-height: 300px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  .custom-selector--open .custom-selector__dropdown {
    display: block;
  }

  .custom-selector--open .custom-selector__arrow {
    transform: rotate(180deg);
  }

  .custom-selector__option {
    padding: 8px 15px;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .custom-selector__option:hover {
    background-color: #f5f5f5;
  }

  .custom-selector__option--selected {
    background-color: #e6f7ff;
    color: #1890ff;
  }

  .custom-selector__arrow {
    transition: transform 0.2s;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const selectors = document.querySelectorAll('[data-selector]');

    selectors.forEach((selector) => {
      const trigger = selector.querySelector('[data-selector-trigger]');
      const dropdown = selector.querySelector('[data-selector-dropdown]');
      const valueDisplay = selector.querySelector('[data-selector-value]');
      const options = selector.querySelectorAll('.custom-selector__option');

      // 点击触发器打开/关闭下拉框
      trigger.addEventListener('click', (e) => {
        e.stopPropagation();
        selector.classList.toggle('custom-selector--open');
      });

      // 点击选项
      options.forEach((option) => {
        option.addEventListener('click', () => {
          const value = option.dataset.value;
          const label = option.dataset.label;

          // 更新显示值
          valueDisplay.textContent = label;

          // 更新选中状态
          options.forEach((opt) => {
            opt.classList.remove('custom-selector__option--selected');
          });
          option.classList.add('custom-selector__option--selected');

          // 关闭下拉框
          selector.classList.remove('custom-selector--open');

          // 触发自定义事件
          selector.dispatchEvent(
            new CustomEvent('change', {
              detail: { value, label },
            })
          );
        });
      });

      // 点击外部关闭下拉框
      document.addEventListener('click', (e) => {
        if (!selector.contains(e.target)) {
          selector.classList.remove('custom-selector--open');
        }
      });
    });

    const selector = document.querySelector('[data-selector]');

    selector.addEventListener('change', (event) => {
      const { value, label } = event.detail;
      console.log('Selected:', value, label);
    });
  });
</script>
